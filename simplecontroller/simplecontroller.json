{
  "fileName": "simplecontroller.jar",
  "findings": [
    {
      "id": "simplecontroller1",
      "source": {
        "targetName": "getParameter",
        "targetNo": 1,
        "statement": "return new ResponseEntity(\"Response from Simple Controller. Received message: \" + request.getParameter(\"message\"), HttpStatus.OK);",
        "methodName": "public ResponseEntity<String> sendMessageBack(HttpServletRequest request)",
        "className": "de.fraunhofer.iem.springbench.simplecontroller.controllers.SimpleController",
        "lineNo": 16,
        "type": "methodinvocation",
        "IRs": [
          {
            "type": "Jimple",
            "IRstatement": "$r3 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>(\"message\")"
          }
        ]
      },
      "sink": {
        "targetName": "ResponseEntity",
        "targetNo": 1,
        "statement": "return new ResponseEntity(\"Response from Simple Controller. Received message: \" + request.getParameter(\"message\"), HttpStatus.OK);",
        "methodName": "public ResponseEntity<String> sendMessageBack(HttpServletRequest request)",
        "className": "de.fraunhofer.iem.springbench.simplecontroller.controllers.SimpleController",
        "lineNo": 16,
        "type": "methodinvocation",
        "IRs": [
          {
            "type": "Jimple",
            "IRstatement": "specialinvoke $r0.<org.springframework.http.ResponseEntity: void <init>(java.lang.Object,org.springframework.http.HttpStatus)>($r5, $r6)"
          }
        ]
      },
      "intermediateFlows": [],
      "description": "The user can send a message over a request parameter which is directly returned to the response body without proper sanitization.\n\ncurl http://localhost:8080/?message=alert(document.cookie);",
      "isNegative": false,
      "attributes": {
        "@Controller": true
      }
    }
  ]
}